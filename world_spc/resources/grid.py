from flask_restful import Resource
from flask import request, abort
from marshmallow import Schema, fields
from world_spc.workers import grid_worker


# Marshmallow for data validation and defining schema
class GridQuerySchema(Schema):
    region = fields.Str(required=True)
    start = fields.Str()
    end = fields.Str()


q_schema = GridQuerySchema()


class Grid(Resource):
    """
    Handles all logic for servicing grid data requests.
    """

    def get(self):
        """
        Return watts generated by fuel type over a given timeseries (WIP).
        """
        errors = q_schema.validate(request.args)
        if errors:
            abort(400, str(errors))
        region = request.args["region"]
        start = request.args["start"]
        end = request.args["end"]
        return {"region": region, "start": start, "end": end,
                "data": grid_worker.parse_latest()}
